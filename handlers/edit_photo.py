from telegram import Update
from telegram.ext import ContextTypes
from services.edit_service import edit_photo
import logging
import tempfile
import os

logger = logging.getLogger(__name__)

async def handle_edit_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get("awaiting_edit"):
        return

    context.user_data["awaiting_edit"] = False

    photo = update.message.photo[-1]
    caption = update.message.caption

    if not caption:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫ —Ñ–æ—Ç–æ (—á—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å).")
        return

    await update.message.reply_text("üé® –§–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω—ã.\n‚è≥ –ù–∞—á–∏–Ω–∞—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥...")

    try:
        file = await context.bot.get_file(photo.file_id)
        photo_bytes = await file.download_as_bytearray()

        # –í—Ä–µ–º–µ–Ω–Ω—ã–π PNG-—Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(delete=False, suffix=".png") as temp_image:
            temp_image.write(photo_bytes)
            temp_image_path = temp_image.name

        logger.info(f"üì∏ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {temp_image_path}")
        logger.info(f"üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {caption}")

        edited_image_url = edit_photo(temp_image_path, caption)

        logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω URL –æ—Ç DALL¬∑E: {edited_image_url}")

        await update.message.reply_photo(photo=edited_image_url, caption="‚ú® –ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Ç–≤–æ—ë –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ.")

        os.remove(temp_image_path)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
