from telegram import Update
from telegram.ext import ContextTypes
from services.edit_service import edit_photo
import logging
import tempfile
import os

logger = logging.getLogger(__name__)

# –•—Ä–∞–Ω–∏–º –ø—É—Ç—å –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Ñ–æ—Ç–æ
TEMP_PHOTO_KEY = "edit_temp_photo"

async def handle_edit_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # üì∑ –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–æ —Ñ–æ—Ç–æ
    if update.message.photo:
        file = await context.bot.get_file(update.message.photo[-1].file_id)
        photo_bytes = await file.download_as_bytearray()

        with tempfile.NamedTemporaryFile(delete=False, suffix=".png") as temp_image:
            temp_image.write(photo_bytes)
            context.user_data[TEMP_PHOTO_KEY] = temp_image.name

        await update.message.reply_text("‚úè –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ —Ñ–æ—Ç–æ.")
        return

    # üìù –ü–æ—Ç–æ–º –ø—Ä–∏—à—ë–ª —Ç–µ–∫—Å—Ç
    if update.message.text and TEMP_PHOTO_KEY in context.user_data:
        prompt = update.message.text
        temp_image_path = context.user_data.pop(TEMP_PHOTO_KEY)

        await update.message.reply_text("üé® –†–µ–¥–∞–∫—Ç–∏—Ä—É—é —Ñ–æ—Ç–æ...")

        try:
            edited_image_url = edit_photo(temp_image_path, prompt)
            await update.message.reply_photo(photo=edited_image_url, caption="–ì–æ—Ç–æ–≤–æ!")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            os.remove(temp_image_path)
        return

    # –ï—Å–ª–∏ –Ω–∏ —Ñ–æ—Ç–æ, –Ω–∏ —Ç–µ–∫—Å—Ç
    await update.message.reply_text("‚ùó –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ, –ø–æ—Ç–æ–º –æ–ø–∏—Å–∞–Ω–∏–µ.")
