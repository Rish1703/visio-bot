from telegram import Update
from telegram.ext import ContextTypes
from services.did_service import animate_photo

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–¥–∞–ª–∏ –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—é
    if not context.user_data.get("awaiting_animation"):
        return  # –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –≤—ã—Ö–æ–¥–∏–º
    
    context.user_data["awaiting_animation"] = False  # —Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞

    photo = update.message.photo[-1]  # —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
    text = update.message.caption or "–ü—Ä–∏–≤–µ—Ç!"
    
    await update.message.reply_text("üåÄ –°–æ–∑–¥–∞—é –∞–Ω–∏–º–∞—Ü–∏—é...")

    try:
        file = await context.bot.get_file(photo.file_id)
        photo_url = file.file_path

        video_url = animate_photo(photo_url, text)
        await update.message.reply_video(video=video_url, caption="–ì–æ—Ç–æ–≤–æ!")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

